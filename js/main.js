!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=jQuery},function(e,t,n){e.exports=n(4)},,,function(e,t,n){"use strict";n.r(t);new Swiper(".swiper-container",{direction:"horizontal",loop:!0,slidesPerView:"auto",pagination:{el:".swiper-pagination"},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},scrollbar:{el:".swiper-scrollbar"}});var a=n(0),o=function(e){if(a(e).length>0)return a(e).height()},s=function(e,t,n,o,s){a(e).hasClass(t)&&a(e).removeClass(t),a(e).addClass(n),setTimeout((function(){a(e).html(o),a(e).removeClass(n),a(e).addClass(t),a(s).css("min-height","auto")}),500)};jQuery((function(e){var t;!function(){if(a(".content-card__text").length>0){if(a(".application-section-1").length>0){if(a(".application-section-1").addClass("content-card__visible"),a(".application-section-1").removeClass("content-card__hidden"),a("#application-section-1").addClass("side-links__item--active"),a(window).width()<=767){var e=a(".content-card__visible").height();a(".content-box").css("height",e+150)}a(window).on("resize",(function(){if(a(window).width()<=767){var e=a(".content-card__visible").height();a(".content-box").css("height",e+150),a(".main-footer").css("margin-top","".concat(e+30,"px"))}}))}a(".side-link--target").on("click",(function(e){e.preventDefault();var t=a(".content-card__visible").attr("data-application"),n=a(this).attr("id"),o=a(".content-box"),s=a('*[data-application="'.concat(n,'"]')).height();a(".".concat(t)).removeClass("content-card__visible"),a(".".concat(t)).addClass("content-card__hidden"),a("#".concat(t)).removeClass("side-links__item--active"),a(".".concat(n)).addClass("content-card__visible"),a(window).width()<=767?o.css("padding-bottom",s+150):o.css("padding-bottom",s-a(".side-links__list").height()+20),a("#".concat(n)).addClass("side-links__item--active"),a(".".concat(n)).removeClass("content-card__hidden")}))}}(),a(".ig-footer-navbar").length>0&&(a(".ig-footer-navbar li.menu-item-has-children ul").removeClass("dropdown-menu"),a(".ig-footer-navbar li.menu-item-has-children ul").addClass("former-dropdown-menu")),a(".dropdown-menu").children(".current_page_item").length>0&&a(".current_page_ancestor > a").css("text-decoration","underline"),a(".content-card").hasClass("instrument-1")&&(a(".instrument-1").removeClass("content-card__hidden--reverse "),a("#instrument-1").addClass("side-links__item--active"),a(".instrument-1").addClass("content-card__visible--teachers"),a(window).on("resize",(function(){if(a(".workshop__teachers").length>0)if(a(window).width()<=767){var e=a(".content-card__visible--teachers").outerHeight();a(".workshop__teachers").css("padding-bottom","".concat(e+30,"px"))}else a(window).width()>767&&a(".workshop__teachers").css("padding-bottom","0")})),a(".side-link--target-instrument").on("click",(function(e){e.preventDefault();var t=a(".workshop__teachers"),n=a(".content-card__visible--teachers").attr("data-instrument"),o=a(this).attr("id"),s=a('*[data-instrument="'.concat(o,'"]')).height();console.log(s),a(".".concat(o)).removeClass("content-card__hidden--reverse"),a(".".concat(o)).addClass("content-card__visible--teachers"),a("#".concat(o)).addClass("side-links__item--active"),a(".".concat(n)).removeClass("content-card__visible--teachers"),a(".".concat(n)).addClass("content-card__hidden--reverse"),a("#".concat(n)).removeClass("side-links__item--active"),a(window).width()<=767?t.css("padding-bottom",s+150):t.css("padding-bottom",s-a(".side-links__list").height()+20)}))),a(".modal").length>0&&(a(".modal-trigger-js").on("click",(function(e){e.preventDefault();var t=a(this).attr("id");a(".modal").addClass("is-open"),a("[data-modalnum=".concat(t,"]")).removeClass("modal__hidden"),a("html").addClass("no-overflow"),a("[data-modalcontent=".concat(t,"]")).addClass("modal__content--on-screen"),setTimeout((function(){a("[data-modalcontent=".concat(t,"]")).removeClass("modal__content--off-screen")}),10)})),a(".modal__close").on("click",(function(){a(".modal__content--on-screen").addClass("modal__content--off-screen"),a(".modal__content--on-screen").removeClass("modal__content--on-screen"),setTimeout((function(){a(".modal").addClass("modal__hidden"),a("html").removeClass("no-overflow")}),500)}))),a(".modal").length,t=function(e,t,n,o){a(".show-all-concerts-js-ajax").hasClass("sort-by-toggler__active")&&a(".show-all-concerts-js-ajax").removeClass("sort-by-toggler__active"),a("#ig-sort-show-all").hasClass("ig_gav-invisible")&&a("#ig-sort-show-all").removeClass("ig_gav-invisible"),a(".".concat(e)).hasClass("sort-by-menu--off-screen")&&(a(".".concat(t)).hasClass("sort-by-menu--on-screen")&&(a(".".concat(t)).removeClass("sort-by-menu--on-screen"),a(".".concat(t)).addClass("sort-by-menu--off-screen")),a("#".concat(n)).removeClass("sort-by-toggler__active"),a("#".concat(o)).addClass("sort-by-toggler__active"),a(".".concat(e)).css("display","flex"),a(".".concat(e)).removeClass("sort-by-menu--off-screen"),a(".".concat(e)).addClass("sort-by-menu--on-screen"))},a("#ig-sort-by-venue").on("click",(function(e){e.preventDefault(),t("sort-by-venue","sort-by-date","ig-sort-by-date","ig-sort-by-venue")})),a("#ig-sort-by-date").on("click",(function(e){e.preventDefault(),t("sort-by-date","sort-by-venue","ig-sort-by-venue","ig-sort-by-date")})),a(".sort-by-venue-js-ajax").on("click",(function(e){e.preventDefault(),a(".js-hide-div-on-ajax").hide(),a(".sort-by-options__link").hasClass("sort-by-options__link--active")&&a(".sort-by-options__link").removeClass("sort-by-options__link--active"),a(".target-div-for-modal-and-spinner-js").hide().append('<div class="ig_loading-spinner   ">\n    </div>').fadeIn(200),a(this).addClass("sort-by-options__link--active");var t=a(this).data("venue-id"),n=o(".ajax-js-change-events-target");a(".page-upcoming-concerts").css("min-height",n),a.ajax({url:wpAjax.ajaxUrl,data:{action:"filter",venueID:t},type:"POST",success:function(e){a(".ig_loading-spinner").fadeOut((function(){a(".ig_loading-spinner").remove()})),s(".ajax-js-change-events-target","history-wrapper__on-screen","history-wrapper__off-screen",e,".page-upcoming-concerts")},error:function(e){console.warn(e)}})})),a(".show-all-concerts-js-ajax").on("click",(function(e){e.preventDefault(),a(".js-hide-div-on-ajax").hide(),a(".sort-by-options__link").hasClass("sort-by-options__link--active")&&a(".sort-by-options__link").removeClass("sort-by-options__link--active"),a(".sort-by-toggler").hasClass("sort-by-toggler__active")&&a(".sort-by-toggler").removeClass("sort-by-toggler__active"),a(".sort-by-venue").hasClass("sort-by-menu--on-screen")&&(a(".sort-by-venue").removeClass("sort-by-menu--on-screen"),a(".sort-by-venue").addClass("sort-by-menu--off-screen")),a(".sort-by-date").hasClass("sort-by-menu--on-screen")&&(a(".sort-by-date").removeClass("sort-by-menu--on-screen"),a(".sort-by-date").addClass("sort-by-menu--off-screen")),a(".show-all-concerts-js-ajax").addClass("sort-by-toggler__active"),a(".target-div-for-modal-and-spinner-js").hide().append('<div class="ig_loading-spinner   ">\n    </div>').fadeIn(200);var t=o(".ajax-js-change-events-target");a(".page-upcoming-concerts").css("min-height",t),a.ajax({url:wpAjax.ajaxUrl,data:{action:"filter",venueID:null,showAll:!0},type:"POST",success:function(e){s(".ajax-js-change-events-target","history-wrapper__on-screen","history-wrapper__off-screen",e,".page-upcoming-concerts"),a(".ig_loading-spinner").fadeOut((function(){a(".ig_loading-spinner").remove()}))},error:function(e){console.warn(e)}})})),a(".sort-by-date-js-ajax").on("click",(function(e){e.preventDefault(),a(".js-hide-div-on-ajax").hide();var t=a(this).data("concert-date");a(".target-div-for-modal-and-spinner-js").hide().append('<div class="ig_loading-spinner   ">\n    </div>').fadeIn(200);var n=o(".ajax-js-change-events-target");a(".page-upcoming-concerts").css("min-height",n),a.ajax({url:wpAjax.ajaxUrl,data:{action:"filter",venueID:"non-venue-choice",datechoice:t,dateFromAjax:!0},type:"POST",success:function(e){s(".ajax-js-change-events-target","history-wrapper__on-screen","history-wrapper__off-screen",e,".page-upcoming-concerts"),a(".ig_loading-spinner").fadeOut((function(){a(".ig_loading-spinner").remove()}))},error:function(e){console.warn(e)}})})),a(".festival-year-toggler-js-ajax").on("click",(function(e){e.preventDefault();var t=a(this).data("festival-year");a(".extra-year-info-js").text(t),a(".festival-year-toggler-js-ajax").hasClass("sort-by-toggler__active")&&a(".festival-year-toggler-js-ajax").removeClass("sort-by-toggler__active"),a(this).addClass("sort-by-toggler__active"),a(".target-div-for-modal-and-spinner-js").hide().append('<div class="ig_loading-spinner   ">\n    </div>').fadeIn(200);var n=o(".history-wrapper");a(".current-year-artists__history").css("min-height",n),a.ajax({url:wpAjax.ajaxUrl,data:{action:"getHistory",festivalQueryYear:t},type:"POST",success:function(e){a(".history-wrapper").html()!==e&&(s(".history-wrapper","history-wrapper__on-screen","history-wrapper__off-screen",e,".current-year-artists__history"),a(".ig_loading-spinner").fadeOut((function(){a(".ig_loading-spinner").remove()})))},error:function(e){console.warn(e)}})})),a(".artist-link-target-js-ajax").length>0&&a(document).on("click",".artist-link-target-js-ajax",(function(e){if("full_bio"===a(this).data("type-of-link")){e.preventDefault(),a(".target-div-for-modal-and-spinner-js").hide().append('<div class="ig_loading-spinner   ">\n</div>').fadeIn(200),setTimeout((function(){a(".modal").addClass("modal__visible"),a(".modal").removeClass("modal__invisible")}),200),a(document).on("click",".modal__close",(function(e){a(".single-artist-dynamic-container").fadeOut(200),setTimeout((function(){a(".single-artist-dynamic-container").remove(),a(".modal").removeClass("modal__visible"),a(".modal").addClass("modal__invisible")}),200)}));var t=a(this).data("artist-id");a.ajax({url:wpAjax.ajaxUrl,data:{action:"getSingleArtist",queriedArtistID:t},type:"POST",success:function(e){a(".modal").html(e),a(".ig_loading-spinner").fadeOut((function(){a(".ig_loading-spinner").remove()}))},error:function(e){console.warn(e)}})}else if("no_page"===a(this).data("type-of-link"))e.preventDefault();else if("no-data"===a(this).data("type-of-link")){e.preventDefault(),a(".target-div-for-modal-and-spinner-js").hide().append('<div class="ig_loading-spinner   ">\n  </div>').fadeIn(200),setTimeout((function(){a(".modal").addClass("modal__visible"),a(".modal").removeClass("modal__invisible")}),200),a(document).on("click",".modal__close",(function(e){a(".single-artist-dynamic-container").fadeOut(200),setTimeout((function(){a(".single-artist-dynamic-container").remove(),a(".modal").removeClass("modal__visible"),a(".modal").addClass("modal__invisible")}),200)}));var n=a(this).data("artist-id");a.ajax({url:wpAjax.ajaxUrl,data:{action:"getSingleArtist",queriedArtistID:n},type:"POST",success:function(e){a(".modal").html(e),a(".ig_loading-spinner").fadeOut((function(){a(".ig_loading-spinner").remove()}))},error:function(e){console.warn(e)}})}})),e("p:has(iframe)"),e.expr.pseudos.external=function(e){return!e.href.match(/^mailto\:/)&&e.hostname!=location.hostname&&!e.href.match(/^javascript\:/)&&!e.href.match(/^$/)},e("a:external").attr("target","_blank")}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,